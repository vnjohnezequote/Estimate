<UserControl x:Class="JobInfoModule.Views.ChoosingCustomerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JobInfoModule.Views"
             xmlns:viewModels="clr-namespace:JobInfoModule.ViewModels"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:interactions="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converter ="clr-namespace:ApplicationConverter;assembly=ApplicationConverter"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:ChoosingCustomerViewModel, IsDesignTimeCreatable=True}"
             Padding="20 0 20 0">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converter:StringToPackIconConverter x:Key="StringToPackIconConverter"/>
                </ResourceDictionary>
                <!--<ResourceDictionary>
                    <Style TargetType="ListBox" BasedOn="{StaticResource MaterialListBox}"/>
                </ResourceDictionary>-->
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <GroupBox Header="Quote Frame" Margin="0 10 0 0">
            <DockPanel Margin="0 10 0 0">
                <CheckBox Content="Wall2D Frame" IsChecked="{Binding JobInfo.QuoteWallFrame}"/>
                <CheckBox Content="Floor Frame" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteFloorFrame}"/>
                <CheckBox Content="Rafter Frame" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteRafterFrame}"/>
            </DockPanel>
        </GroupBox>
        <GroupBox Header="Quote HardWare" Margin="0 10 0 0">
            <StackPanel>
                <DockPanel Margin="0 10 0 0">
                    <CheckBox Content="Eaves Soffit" IsChecked="{Binding JobInfo.QuoteEavesSoffit}"/>
                    <CheckBox Content="Cladding" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteCladding}"/>
                    <CheckBox Content="Flooring" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteFlooring}"/>
                </DockPanel>
                <DockPanel Margin="0 10 0 0">
                    <CheckBox Content="Frame Hardware" IsChecked="{Binding JobInfo.QuoteFrameHardware}"/>
                    <CheckBox Content="Insulation" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteInsulation}"/>
                </DockPanel>
                <DockPanel Margin="0 10 0 0">
                    <CheckBox Content="Lookup" IsChecked="{Binding JobInfo.QuoteLookUp}"/>
                    <CheckBox Content="Fixout" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteFixout}"/>
                    <CheckBox Content="FinalFix" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteFinalFix}"/>
                </DockPanel>
                <DockPanel Margin="0 10 0 0">
                    <CheckBox Content="Post in Hardware File" IsChecked="{Binding JobInfo.QuoteShelving}"/>
                    <CheckBox Content="Shelving" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteShelving}"/>
                    <CheckBox Content="Roof Batten In Hardware File" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteRoofBattentInHardware}"/>
                    <CheckBox Content="Screen" Margin="20 0 0 0" IsChecked="{Binding JobInfo.QuoteScreen}"/>
                </DockPanel>
            </StackPanel>
        </GroupBox>
        
        <StackPanel Margin="0 10 0 0">
            <ListBox Name="CustomerMenu"
                     ItemsSource="{Binding Clients}"
            SelectedItem="{Binding SelectedClient, Mode=TwoWay}">
            <!-- Command Selection Customer -->
            <interactions:Interaction.Triggers>
                <interactions:EventTrigger EventName="Loaded">
                    <interactions:InvokeCommandAction Command="{Binding CustomerMenuLoadedCommand}"
                                                      CommandParameter="{Binding ElementName=CustomerMenu}"/>
                </interactions:EventTrigger>
                <interactions:EventTrigger EventName="SelectionChanged">
                    <interactions:InvokeCommandAction Command="{Binding CustomerMenuSelectCommand}"
                                                      CommandParameter="{Binding ElementName=CustomerMenu}"/>
                </interactions:EventTrigger>
            </interactions:Interaction.Triggers>
            <ListBox.Resources>
                <ResourceDictionary>
                    <Style TargetType="materialDesign:PackIcon">
                        <Setter Property="Width" Value="30"/>
                        <Setter Property="Height" Value="30"/>
                    </Style>
                </ResourceDictionary>
            </ListBox.Resources>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon 	x:Name="PackIcon"
													Kind="{Binding ClientIcon, Converter={StaticResource StringToPackIconConverter}}"/>
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <!--<ComboBox ItemsSource="{Binding Clients}"
                  SelectedItem="{Binding JobInfo.Client,Mode=TwoWay}"
                  DisplayMemberPath="Name"/>-->
        <DockPanel Margin="0 10 0 0">
            <TextBlock Text="Job Folder: " Width="100"/>
            <TextBox Text="{Binding JobInfo.JobLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DockPanel>
       
        <Button Content="Browser"
                Command="{Binding JobLocationCommand}"
                 Margin="0 10 0 0"/>
        <DockPanel Margin="0 10 0 0">
            <TextBlock Text="Job Number" Width="100"/>
            <TextBox x:Name="TxtJobNumber"
                     Text="{Binding JobInfo.JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </DockPanel>
       
    </StackPanel>
</UserControl>
