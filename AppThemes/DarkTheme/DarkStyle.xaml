<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DarkColor.xaml"/>
        <!-- MahApps Source -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        

        <!-- Material Design Source -->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

        <!-- Overide Mahapp font with material design font -->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Fonts.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.popupbox.xaml" />

        <!-- Custom Material Design -->
        <ResourceDictionary Source="TextBoxStyle.xaml"/>
        <ResourceDictionary Source="ComboBoxStyle.xaml"/>
        <ResourceDictionary Source="BorderStyle.xaml"/>
        <ResourceDictionary Source="UserControlStyle.xaml"/>
        <ResourceDictionary Source="ListBoxStyle.xaml"/>
        <ResourceDictionary Source="ButtonStyle.xaml"/>
        <ResourceDictionary Source="FlatWindowStyle.xaml"/>
        <ResourceDictionary Source="PackIconStyle.xaml"/>
        <ResourceDictionary Source="TabControlStyle.xaml"/>
        <ResourceDictionary Source="TextBlockStyle.xaml"/>

        <!-- Material Design Flyout for Mahapp-->
        <ResourceDictionary Source="Flyout.xaml"/>

    </ResourceDictionary.MergedDictionaries>

    <!-- Set Default Material Design For Control -->
    
    <Style TargetType="TextBox" BasedOn="{StaticResource ClearButtonTextBox}"/>
    <Style TargetType="Button" BasedOn="{StaticResource FlatButtonNoPadding}"/>
    <Style TargetType="ComboBox"
           BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,-20"/>
        <Setter Property="Template" Value="{StaticResource FloatHintComboBoxWithButton}"/>
        <!--<Setter Property="mah:TextBoxHelper.ButtonContent" Value="{materialDesign:PackIcon Clear}"/>-->
        <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="False"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ListBoxItem"
           BasedOn="{StaticResource MaterialDesignListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center"/>
    </Style>
    <!--<Style TargetType="Label" BasedOn="{StaticResource MahApps.Styles}">
        
    </Style>-->
    <Style BasedOn="{StaticResource MaterialDesignPopupBox}" TargetType="{x:Type materialDesign:PopupBox}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />
        <Setter Property="ToggleContent" Value="{StaticResource PopupBoxToggleContent}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RedAccent400Color}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>