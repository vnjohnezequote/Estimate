<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:behaviors="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DarkColor.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignDarkTheme.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
    <!-- Setter Default for Tad Header TextBlock -->
    <Style TargetType="TabItem" x:Key="MaterialDesignTabItem">
         <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="OnSelected">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="clickBorder" Storyboard.TargetProperty="Opacity">
                                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.12">
                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                    <CircleEase EasingMode="EaseOut" />
                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                            </EasingDoubleKeyFrame>
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.35" Value="0.12" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                    <SineEase EasingMode="EaseOut" />
                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                            </EasingDoubleKeyFrame>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                               Storyboard.TargetName="clickBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                               Storyboard.TargetName="clickBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                               Storyboard.TargetName="border">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    <Storyboard x:Key="OnDeselected">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                               Storyboard.TargetName="border">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <!--MinHeight="48" MinWidth="90"-->
                                                    <Border x:Name="clickBorder" Background="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                    Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                        <Border.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Border.RenderTransform>
                                                    </Border>
                                                    <ContentPresenter x:Name="headerContent" ContentSource="Header" RecognizesAccessKey="True"
                                                              Margin="24,6,24,6" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                              TextBlock.FontSize="14" TextBlock.FontWeight="Medium"
                                                              TextBlock.Foreground="{Binding Path=(controls:TabControlAssist.TabHeaderForeground), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ContentPresenter.Style>
                                                            <Style TargetType="ContentPresenter">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                                        <Setter Property="Opacity" Value="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveOpacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentPresenter.Style>
                                                    </ContentPresenter>
                                                    <Border x:Name="border" Background="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Padding="8" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                                        <Border.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Border.RenderTransform>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="controls:TabControlAssist.TabHeaderForeground" Value="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource OnSelected}" />
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource OnDeselected}" />
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="False">
                                                        <Setter Property="controls:TabControlAssist.TabHeaderForeground" Value="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.23" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
    </Style>
    <!--BasedOn="{StaticResource MaterialDesignTabControl}-->
    <Style x:Key="MaterialDesignTabControlCustom" TargetType="{x:Type TabControl}" BasedOn="{StaticResource MaterialDesignTabControl}" >
                <Setter Property="controls:TabControlAssist.TabHeaderHorizontalAlignment" Value="Center" />
                <Setter Property="mah:TabControlHelper.Transition" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignTabItem}"/>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                <Border Grid.Row="0" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                BorderThickness="0,0,0,1" BorderBrush="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" Opacity="0.12" />
                                <Border Grid.Row="0" Background="Transparent" HorizontalAlignment="Stretch">
                                    <!--<TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent"
                                      HorizontalAlignment="{Binding Path=(controls:TabControlAssist.TabHeaderAlignment), RelativeSource={RelativeSource TemplatedParent}}" />-->
                                    <!-- do not use a TabPanel because its behavior is different to the Material Design specs -->
                                    <materialDesign:ColorZone Mode="Dark" materialDesign:ShadowAssist.ShadowDepth="Depth1">
                                        <UniformGrid x:Name="HeaderPanel" FlowDirection="LeftToRight" IsItemsHost="True" Rows="1" Background="Transparent"
                                             HorizontalAlignment="{Binding Path=(controls:TabControlAssist.TabHeaderHorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                             Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" />
                                    </materialDesign:ColorZone>
                                </Border>
                                <Border Grid.Row="1">
                                    <mah:TransitioningContentControl behaviors:ReloadBehavior.OnSelectedTabChanged="True"
                                                                  RestartTransitionOnContentChange="True"
                                                                  Transition="{TemplateBinding mah:TabControlHelper.Transition}"
                                                                  UseLayoutRounding="True">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                    </mah:TransitioningContentControl>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

</ResourceDictionary>