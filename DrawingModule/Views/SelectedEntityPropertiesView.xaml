<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:DrawingModule.ViewModels"
             xmlns:local="clr-namespace:DrawingModule.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:pt="http://propertytools.org/wpf"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:applicationConverter="clr-namespace:ApplicationConverter;assembly=ApplicationConverter"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:appModelEnum="clr-namespace:AppModels.Enums;assembly=AppModels"
             xmlns:entities="clr-namespace:devDept.Eyeshot.Entities;assembly=devDept.Eyeshot.Control.Wpf.v2021"
             x:Class="DrawingModule.Views.SelectedEntityPropertiesView"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance {x:Type viewModels:SelectedEntityPropertiesViewModel}, IsDesignTimeCreatable=True}"
             x:Name="EntityProperty"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <ObjectDataProvider x:Key="ColorMethods"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="entities:colorMethodType"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="AlignmentTypes"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="entities:Text+alignmentType"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="BeamMarkedLocation"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="appModelEnum:BeamMarkedLocation"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="OpeningTypes"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="appModelEnum:OpeningType"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="FramingTypes"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="appModelEnum:FramingTypes"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="BlockingTypes"
                                        MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="appModelEnum:BlockingTypes"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <applicationConverter:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    <applicationConverter:ColorToColorConverter x:Key="ColorToColorConverter"/>
                    <applicationConverter:ColorToStringConverter x:Key="ColorToStringConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <StackPanel>
            <StackPanel.Resources>
                <ResourceDictionary>
                    <Style TargetType="TextBlock">
                        <Setter Property="Width" Value="170"/>
                        <Setter Property="MinWidth" Value="100"/>
                        <Setter Property="Margin" Value="0 0 5 0"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Margin" Value="15 5 0 5"/>
                    </Style>
                </ResourceDictionary>
            </StackPanel.Resources>
            <DockPanel  Visibility="{Binding LayerVisibility}">
                <TextBlock Text="Layer" />
                <ComboBox ItemsSource="{Binding LayerManager.Layers}"
                          SelectedValuePath="Name"
                          SelectedValue="{Binding Path=SelectedEntity.LayerName}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Fill="{Binding Color,Converter={StaticResource ColorToBrushConverter}}" Width="16" Height="16" Margin="0 2 5 2"/>
                                <TextBlock Text="{Binding Name}" Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </DockPanel>
            <DockPanel Visibility="{Binding ColorVisibility}">
                <TextBlock Text="Color" />
                <syncfusion:ColorPicker Background="Transparent"
                                        Color="{Binding SelectedEntity.Color, Mode=TwoWay, Converter={StaticResource ColorToColorConverter}}"
                                        Foreground="{Binding SelectedEntity.Color,Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding LevelVisibility}">
                <TextBlock Text="Level" />
                <ComboBox ItemsSource="{Binding Levels}"
                          DisplayMemberPath="LevelName"
                          SelectedValuePath="LevelName"
                          SelectedValue="{Binding Path= SelectedEntity.WallLevelName}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding ColorMethodVisibility}">
                <TextBlock Text="Color By" />
                <ComboBox ItemsSource="{Binding Source={StaticResource ColorMethods}}"
                          SelectedItem="{Binding Path=SelectedEntity.ColorMethod}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding LayerVisibility}">
                <TextBlock Text="Line Weight" VerticalAlignment="Bottom" />
                <TextBox Text="{Binding SelectedEntity.LineWeight}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding TextContentVisibility}">
                <TextBlock Text="Text Content" />
                <TextBox Text="{Binding SelectedEntity.TextString}"
                         AcceptsReturn="True"/>
            </DockPanel>
            <DockPanel Visibility="{Binding TextContentVisibility}">
                <TextBlock Text="Text Height" />
                <TextBox Text="{Binding SelectedEntity.TextHeight}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding LeaderVisibility}">
                <TextBlock Text="Arrow Size" />
                <TextBox Text="{Binding SelectedEntity.ArrowSize}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Client Name" />
                <TextBox Text="{Binding SelectedEntity.ClientName}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Engineer Reference" />
                <ComboBox ItemsSource="{Binding EngineerList}"
                          SelectedItem="{Binding SelectedEntity.EngineerMember}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Text="{Binding EngineerName}"/>
                                <TextBlock  Text="{Binding TimberGrade}" Margin="10 0 0 0"/>
                                <TextBlock Text="{Binding SizeGrade}" Margin="10 0 0 0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                </ComboBox>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Beam Grade" />
                <ComboBox ItemsSource="{Binding BeamGradeList}"
                          SelectedItem="{Binding SelectedEntity.BeamGrade, Mode=TwoWay}"
                          Text="{Binding SelectedEntity.BeamGrade}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Beam Material" />
                <ComboBox SelectedItem="{Binding SelectedEntity.FramingInfo, Mode=TwoWay}"
                          ItemsSource="{Binding TimberList}"
                          DisplayMemberPath="SizeTreatment"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Beam Text Alignment" />
                <ComboBox Text="{Binding SelectedEntity.BeamMarkedAlignmentType}"
                          ItemsSource="{Binding Source={StaticResource AlignmentTypes}}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Beam Alignment" />
                <ComboBox ItemsSource="{Binding Source={StaticResource BeamMarkedLocation}}"
                          SelectedItem="{Binding SelectedEntity.BeamMarkLocation}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Beam Location"/>
                <TextBox Text="{Binding SelectedEntity.BeamLocation}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Show Beam Name Only"  />
                <CheckBox IsChecked="{Binding SelectedEntity.ShowBeamNameOnly, Mode=TwoWay}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingBaseVisibility}" HorizontalAlignment="Stretch">
                <TextBlock Text="Name" VerticalAlignment="Bottom" />
                <TextBox Text="{Binding SelectedEntity.Name}" Width="300" />
                <TextBox Text="{Binding SelectedEntity.Index}" materialDesign:HintAssist.Hint="Index" Width="70" Margin="15 0 0 0"/>
                <TextBox Text="{Binding SelectedEntity.SubFixIndex}" materialDesign:HintAssist.Hint="SubFix Index" Margin="15 0 0 0"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingBaseVisibility}">
                <TextBlock Text="Is Existing"/>
                <CheckBox IsChecked="{Binding SelectedEntity.IsExisting}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Framing Type" />
                <ComboBox ItemsSource="{Binding Source={StaticResource FramingTypes}}"
                          SelectedItem="{Binding SelectedEntity.FramingType}"
                          IsEnabled="{Binding FramingTypeCanChange}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Is Continues Beam" />
                <CheckBox IsChecked="{Binding SelectedEntity.ContinuesBeam, Mode=TwoWay}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Wall Over" />
                <CheckBox IsChecked="{Binding SelectedEntity.SupportWallOver, Mode=TwoWay}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BeamVisibility}">
                <TextBlock Text="Custom Notes" />
                <TextBox Text="{Binding SelectedEntity.CustomNotesBeam}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding VectorViewVisibility}">
                <TextBlock Text="Scale" />
                <ComboBox SelectedItem="{Binding SelectedEntity.Scale}"
                          ItemsSource="{Binding ScaleList}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FloorNameVisibility}">
                <TextBlock Text="Floor Name" />
                <TextBox Text="{Binding SelectedEntity.FloorName}"/>
            </DockPanel>
            <DockPanel  Visibility="{Binding FloorNameVisibility}">
                <TextBlock Text="Wall2D Name Scale"/>
                <TextBox Text="{Binding SelectedEntity.ScaleWallName}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding DoorVisibility}">
                <TextBlock Text="Wall Belong to" />
                <ComboBox SelectedItem="{Binding SelectedEntity.WallBelongTo}"
                          ItemsSource="{Binding WallList}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Text="{Binding WallName}" Foreground="{Binding WallColorLayer.Color, Mode=TwoWay,Converter={StaticResource ColorToBrushConverter}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </DockPanel>
            <DockPanel Visibility="{Binding DoorVisibility}">
                <TextBlock Text="Door Types" />
                <ComboBox SelectedItem="{Binding SelectedEntity.OpeningType}"
                          ItemsSource="{Binding Source={StaticResource OpeningTypes}}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding DoorVisibility}">
                <TextBlock Text="Door Width" />
                <ComboBox SelectedItem="{Binding SelectedEntity.DoorWidth}"
                          ItemsSource="{Binding DoorWidthList}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding DoorVisibility}">
                <TextBlock Text="Door Height" />
                <ComboBox SelectedItem="{Binding SelectedEntity.DoorHeight}"
                          ItemsSource="{Binding ExtDoorListHeights}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding DoorVisibility}">
                <TextBlock Text="Door Support Span" />
                <ComboBox SelectedItem="{Binding SelectedEntity.DoorSupportSpan}"
                          ItemsSource="{Binding DoorSupportSpanList}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FBeamVisibility}">
                <TextBlock Text="Beam Under" />
                <CheckBox IsChecked="{Binding SelectedEntity.BeamUnder}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding WallVisibility}">
                <TextBlock Text="Wall Thickness"/>
                <ComboBox ItemsSource="{Binding WallThicknessList}"
                          SelectedItem="{Binding SelectedEntity.WallThickness}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding WallVisibility}">
                <TextBlock Text="Load Bearing Wall" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsLoadBearingWall}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding WallVisibility}">
                <TextBlock Text="Show Dimension" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsShowDimension}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Pitch" />
                <TextBox Text="{Binding SelectedEntity.Pitch}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding FramingVisibility}">
                <TextBlock Text="Extra Length" />
                <TextBox Text="{Binding SelectedEntity.ExtraLength}" Width="150"/>
                <TextBox Text="{Binding SelectedEntity.FullLength}" IsEnabled="{Binding IsBlockingVm}" Margin="15 0 0 0"
                         materialDesign:HintAssist.Hint="FullLength" Width="150"/>
                <TextBox Text="{Binding SelectedEntity.QuoteLength,Mode=OneWay}"
                         Margin="15 0 0 0" 
                         materialDesign:HintAssist.Hint="Quote Length" 
                         IsEnabled="False" 
                         Foreground="GreenYellow" />
            </DockPanel>
            <DockPanel Visibility="{Binding HangerOutTriggerVisibility}">
                <TextBlock Text="HangerA" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsHangerA}"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.HangerAMat}"
                          ItemsSource="{Binding HangerList}"
                          DisplayMemberPath="Name"
                          IsEnabled="{Binding SelectedEntity.IsHangerA}"
                          Margin="15 0 0 0"/>
            </DockPanel>
            <DockPanel Visibility="{Binding HangerOutTriggerVisibility}">
                <TextBlock Text="HangerB" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsHangerB}"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.HangerBMat}"
                          ItemsSource="{Binding HangerList}"
                          DisplayMemberPath="Name"
                          IsEnabled="{Binding SelectedEntity.IsHangerB}"
                          Margin="15 0 0 0"/>
            </DockPanel>
            <DockPanel  Visibility="{Binding HangerOutTriggerVisibility}">
                <TextBlock Text="Outrigger A" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsOutriggerA}"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.OutTriggerAGrade}"
                          ItemsSource="{Binding BeamGradeList}"
                          IsEnabled="{Binding SelectedEntity.IsOutriggerA}"
                          Margin="15 0 0 0" Width="100"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.OutTriggerAMat}"
                          ItemsSource="{Binding OutTriggerATimberList}"
                          DisplayMemberPath="SizeTreatment"
                          IsEnabled="{Binding SelectedEntity.IsOutriggerA}"
                          Width="150"
                          Margin="15 0 0 0"/>
                <CheckBox Content="Flipped"
                          Margin="15 0 0 0"
                          IsChecked="{Binding SelectedEntity.OutTriggerAFlipped}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding HangerOutTriggerVisibility}">
                <TextBlock Text="OutTrigger B" />
                <CheckBox IsChecked="{Binding SelectedEntity.IsOutriggerB}"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.OutTriggerBGrade}"
                          ItemsSource="{Binding BeamGradeList}"
                          IsEnabled="{Binding SelectedEntity.IsOutriggerB}"
                          Margin="15 0 0 0"
                          Width="100"/>
                <ComboBox SelectedItem="{Binding SelectedEntity.OutTriggerBMat}"
                          ItemsSource="{Binding OutTriggerBTimberList}"
                          DisplayMemberPath="SizeTreatment"
                          IsEnabled="{Binding SelectedEntity.IsOutriggerB}"
                          Margin="15 0 0 0"
                          Width="150"/>
                <CheckBox IsChecked="{Binding SelectedEntity.OutTriggerBFlipped}" 
                          Margin="15 0 0 0"
                          Content="Flipped"/>
            </DockPanel>
            <DockPanel Visibility="{Binding HangerVisibility}">
                <TextBlock Text="Hanger Material" />
                <ComboBox SelectedItem="{Binding SelectedEntity.Material}"
                          ItemsSource="{Binding HangerList}"
                          DisplayMemberPath="Name"/>
            </DockPanel>
            <DockPanel Visibility="{Binding OutTriggerVisibility}">
                <TextBlock Text="OutTrigger OutSize" />
                <TextBox Text="{Binding SelectedEntity.OutTriggerOutSize}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding OutTriggerVisibility}">
                <TextBlock Text="OutTrigger InSize"/>
                <TextBox Text="{Binding SelectedEntity.OutTriggerInSize}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BlockingVisibility}">
                <TextBlock Text="Blocking Types" />
                <ComboBox SelectedItem="{Binding SelectedEntity.BlockingType}"
                          ItemsSource="{Binding Source={StaticResource BlockingTypes}}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding ShowFramingNameVisibility}">
                <TextBlock Text="Is Show Framing Name"/>
                <CheckBox IsChecked="{Binding SelectedEntity.IsShowFramingName}"/>
            </DockPanel>
            <DockPanel Visibility="{Binding BlockingVisibility}">
                <TextBlock Text="Is Rotate"/>
                <CheckBox IsChecked="{Binding SelectedEntity.IsRotateBlocking}"/>
            </DockPanel>
            <DockPanel>
                <Button Content="Select Joist"/>
                <TextBlock Text="{Binding SelectedEntity.FramingName}"/>
            </DockPanel>
        </StackPanel>
    </Grid>

</UserControl>
